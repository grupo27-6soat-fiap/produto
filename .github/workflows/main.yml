name: FoodTech_Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  
env:
  ECR_REPOSITORY: foodtech
  EKS_CLUSTER_NAME: foodtech-eks-cluster
  AWS_REGION: us-east-1
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
     - name: Set short git commit SHA
       id: commit
       uses: prompt/actions-commit-hash@v3

     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
          distribution: 'adopt'
          java-version: '17'

     - name: Build with Gradle
       run: |
          ./gradlew build --warning-mode all

     - name: Run JaCoCo
       run: ./gradlew test jacocoTestReport

     - name: List JaCoCo Report
       run: ls -alh build/reports/jacoco/test/

     - name: SonarQube Scan
       run: ./gradlew sonar -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml --warning-mode all
       env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

     - name: Upload Artifacts
       uses: actions/upload-artifact@v3
       with:
          name: Package
          path: build/libs
     - name: Build, tag, and push the image to Amazon ECR
       id: build-image
       env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
       run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

     - name: Update kube config
       run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

     - name: Deploy to EKS
       env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
       run: |
    
          sed -i.bak "s|xxx/lanchonete-myapp:1.0.8|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s/deployment-app.yml && \
          sed -i.bak "s|jdbc:postgresql://postgres-svc:5432/postgres|jdbc:postgresql://$RDS_HOSTNAME:5432/postgres|g" k8s/deployment-app.yml && \
          kubectl apply -f k8s/secret-postgress.yml && \
          kubectl apply -f k8s/secret-payment.yml && \
          kubectl apply -f k8s/deployment-app.yml && \
          kubectl apply -f k8s/service-app.yml && \
          kubectl apply -f k8s/loadbalancer.yml && \
          kubectl apply -f k8s/hpa.yml && \
          kubectl rollout restart deployment lanchonete-deployment

# sed -i.bak "s|jdbc:postgresql://postgres-svc:5432/postgres|jdbc:postgresql://$RDS_HOSTNAME:5432/postgres|g" k8s/deployment-app.yml && \
